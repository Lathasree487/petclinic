pipeline {
    agent { label 'UAT' }
    
    tools {
        // jdk 'jdk17'
        maven 'Maven3'
    }
    
    environment {
        SCANNER_HOME = tool 'sonarscanner'
    }
    
    stages {
        stage('Compile') {
            steps {
                sh 'mvn compile'
            }
        }
        
        stage('Test') {
            steps {
                sh 'mvn test'
            }
        }
        
        stage('Install') {
            steps {
                sh 'mvn clean install'
            }
        }
        
        stage('Sonarqube Analysis') {
            steps {
                withSonarQubeEnv('sonarqube-server') {
                    sh '''${SCANNER_HOME}/bin/sonar-scanner -Dsonar.projectName=PetClinic \
                        -Dsonar.java.binaries=. \
                        -Dsonar.projectKey=PetClinic'''
                }
            }
        }
        
        stage('OWASP Dependency Check') {
            steps {
                catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                    timeout(time: 60, unit: 'MINUTES') {
                        dependencyCheck additionalArguments: '--scan ./', odcInstallation: 'dependency-check'
                        dependencyCheckPublisher pattern: 'dependency-check-report.xml'
                    }
                }
            }
        }
    }
}
